// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from animator.djinni

#pragma once

#include "ease_function.h"
#include "media_range.h"
#include "vec4f.h"
#include <string>
#include <utility>

namespace QMedia { namespace Api {

struct Animator final {
    /** property */
    static const std::string POSITIONXYZ;

    static const std::string ROTATION;

    static const std::string ROTATIONXYZ;

    static const std::string SCALEX;

    static const std::string SCALEY;

    static const std::string SCALEZ;

    static const std::string SCALEXY;

    static const std::string SCALEXYZ;

    static const std::string CONTENTSIZEW;

    static const std::string CONTENTSIZEH;

    static const std::string CONTENTSIZE;

    static const std::string ALPHA;

    static const std::string MIXCOLOR;

    static const std::string CROP;

    std::string name;
    std::string property;
    MediaRange timerang;
    Vec4f startpoint;
    Vec4f endpoint;
    EaseFunction easefunc;
    bool repleat;

    Animator() {}

    Animator(std::string name_,
             std::string property_,
             MediaRange timerang_,
             Vec4f startpoint_,
             Vec4f endpoint_,
             EaseFunction easefunc_,
             bool repleat_)
    : name(std::move(name_))
    , property(std::move(property_))
    , timerang(std::move(timerang_))
    , startpoint(std::move(startpoint_))
    , endpoint(std::move(endpoint_))
    , easefunc(std::move(easefunc_))
    , repleat(std::move(repleat_))
    {}
};

} }  // namespace QMedia::Api
