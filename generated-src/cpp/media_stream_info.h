// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_segment.djinni

#pragma once

#include "Utils/optional.hpp"
#include "audio_description.h"
#include "video_description.h"
#include <cstdint>
#include <utility>
#include <vector>

namespace QMedia { namespace Api {

struct MediaStreamInfo final {
    static const int32_t MEDIA_UNKNOW = 0;

    static const int32_t MEDIA_VIDEO = 1;

    static const int32_t MEDIA_AUDIO = 2;

    int32_t media_type;
    int64_t duration;
    std::vector<int64_t> gops;
    std::experimental::optional<AudioDescription> audio_desc;
    std::experimental::optional<VideoDescription> video_desc;

    MediaStreamInfo() {}

    MediaStreamInfo(int32_t media_type_,
                    int64_t duration_,
                    std::vector<int64_t> gops_,
                    std::experimental::optional<AudioDescription> audio_desc_,
                    std::experimental::optional<VideoDescription> video_desc_)
    : media_type(std::move(media_type_))
    , duration(std::move(duration_))
    , gops(std::move(gops_))
    , audio_desc(std::move(audio_desc_))
    , video_desc(std::move(video_desc_))
    {}
};

} }  // namespace QMedia::Api
