// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_session.djinni

#pragma once

#include <cstdint>
#include <memory>
#include <string>

namespace QMedia { namespace Api {

class MediaSegment;
struct Size;
struct TimeRange;
struct Vec4;

class MediaSessionInternal {
public:
    virtual ~MediaSessionInternal() {}

    virtual std::shared_ptr<MediaSegment> cresteMediaSegment(const std::string & filename, int32_t mode) = 0;

    virtual bool addMediaSegment(const std::shared_ptr<MediaSegment> & segment) = 0;

    virtual bool removeMediaSegment(const std::shared_ptr<MediaSegment> & segment) = 0;

    virtual TimeRange getTotalTimeRange() = 0;

    virtual void setDisplayLayerSize(const Size & size) = 0;

    virtual Size getDisplayLayerSize() = 0;

    virtual void setBkColor(const Vec4 & color) = 0;

    virtual Vec4 getBkColor() = 0;

    /** control */
    virtual void start() = 0;

    virtual void stop() = 0;

    virtual void pause() = 0;

    virtual void resume() = 0;

    virtual void seek(int64_t time_ms, int32_t flag) = 0;

    virtual int64_t getPosition() = 0;
};

} }  // namespace QMedia::Api
