// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_config.djinni

#pragma once

#include "djinni_support.hpp"
#include "video_encode_option.h"

namespace djinni_generated {

class NativeVideoEncodeOption final {
public:
    using CppType = ::QMedia::Api::VideoEncodeOption;
    using JniType = jobject;

    using Boxed = NativeVideoEncodeOption;

    ~NativeVideoEncodeOption();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeVideoEncodeOption();
    friend ::djinni::JniClass<NativeVideoEncodeOption>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/qmedia/editor/generated/VideoEncodeOption") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(IIIIIIIILjava/lang/String;)V") };
    const jfieldID field_mCodectype { ::djinni::jniGetFieldID(clazz.get(), "mCodectype", "I") };
    const jfieldID field_mWidth { ::djinni::jniGetFieldID(clazz.get(), "mWidth", "I") };
    const jfieldID field_mHeight { ::djinni::jniGetFieldID(clazz.get(), "mHeight", "I") };
    const jfieldID field_mBitrate { ::djinni::jniGetFieldID(clazz.get(), "mBitrate", "I") };
    const jfieldID field_mFramerate { ::djinni::jniGetFieldID(clazz.get(), "mFramerate", "I") };
    const jfieldID field_mGop { ::djinni::jniGetFieldID(clazz.get(), "mGop", "I") };
    const jfieldID field_mProfile { ::djinni::jniGetFieldID(clazz.get(), "mProfile", "I") };
    const jfieldID field_mLevel { ::djinni::jniGetFieldID(clazz.get(), "mLevel", "I") };
    const jfieldID field_mExt { ::djinni::jniGetFieldID(clazz.get(), "mExt", "Ljava/lang/String;") };
};

}  // namespace djinni_generated
