// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_comm.djinni

#include "NativeAudioDescription.h"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeAudioDescription::NativeAudioDescription() = default;

NativeAudioDescription::~NativeAudioDescription() = default;

auto NativeAudioDescription::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeAudioDescription>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I16::fromCpp(jniEnv, c.smaple_format)),
                                                           ::djinni::get(::djinni::I16::fromCpp(jniEnv, c.nchannel)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.sample_rate)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.sample_bits)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeAudioDescription::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 5);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeAudioDescription>::get();
    return {::djinni::I16::toCpp(jniEnv, jniEnv->GetShortField(j, data.field_mSmapleFormat)),
            ::djinni::I16::toCpp(jniEnv, jniEnv->GetShortField(j, data.field_mNchannel)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mSampleRate)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mSampleBits))};
}

}  // namespace djinni_generated
