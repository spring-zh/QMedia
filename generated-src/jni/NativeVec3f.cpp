// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_comm.djinni

#include "NativeVec3f.h"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeVec3f::NativeVec3f() = default;

NativeVec3f::~NativeVec3f() = default;

auto NativeVec3f::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeVec3f>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.v1)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.v2)),
                                                           ::djinni::get(::djinni::F32::fromCpp(jniEnv, c.v3)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeVec3f::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 4);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeVec3f>::get();
    return {::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mV1)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mV2)),
            ::djinni::F32::toCpp(jniEnv, jniEnv->GetFloatField(j, data.field_mV3))};
}

}  // namespace djinni_generated
