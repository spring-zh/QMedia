// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_session.djinni

#include "NativeEditorPlayerInternal.h"  // my header
#include "Marshal.hpp"
#include "NativeEditorPlayerCallback.h"
#include "NativeMediaSessionInternal.h"

namespace djinni_generated {

NativeEditorPlayerInternal::NativeEditorPlayerInternal() : ::djinni::JniInterface<::QMedia::Api::EditorPlayerInternal, NativeEditorPlayerInternal>("com/qmedia/editor/generated/EditorPlayerInternal$CppProxy") {}

NativeEditorPlayerInternal::~NativeEditorPlayerInternal() = default;


CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_EditorPlayerInternal_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::QMedia::Api::EditorPlayerInternal>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_qmedia_editor_generated_EditorPlayerInternal_00024CppProxy_native_1getSession(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::EditorPlayerInternal>(nativeRef);
        auto r = ref->getSession();
        return ::djinni::release(::djinni_generated::NativeMediaSessionInternal::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_EditorPlayerInternal_00024CppProxy_native_1setCallback(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::EditorPlayerInternal>(nativeRef);
        ref->setCallback(::djinni_generated::NativeEditorPlayerCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jlong JNICALL Java_com_qmedia_editor_generated_EditorPlayerInternal_00024CppProxy_native_1getPosition(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::EditorPlayerInternal>(nativeRef);
        auto r = ref->getPosition();
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_EditorPlayerInternal_00024CppProxy_native_1play(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::EditorPlayerInternal>(nativeRef);
        ref->play();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_EditorPlayerInternal_00024CppProxy_native_1pause(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::EditorPlayerInternal>(nativeRef);
        ref->pause();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_EditorPlayerInternal_00024CppProxy_native_1seek(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jlong j_timeMs, jint j_flag)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::EditorPlayerInternal>(nativeRef);
        ref->seek(::djinni::I64::toCpp(jniEnv, j_timeMs),
                  ::djinni::I32::toCpp(jniEnv, j_flag));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jboolean JNICALL Java_com_qmedia_editor_generated_EditorPlayerInternal_00024CppProxy_native_1isUserPaused(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::EditorPlayerInternal>(nativeRef);
        auto r = ref->isUserPaused();
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jint JNICALL Java_com_qmedia_editor_generated_EditorPlayerInternal_00024CppProxy_native_1getState(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::EditorPlayerInternal>(nativeRef);
        auto r = ref->getState();
        return ::djinni::release(::djinni::I32::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
