// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from video_runloop.djinni

#include "NativeVideoRunloop.h"  // my header
#include "Marshal.hpp"
#include "NativeVideoRender.h"

namespace djinni_generated {

NativeVideoRunloop::NativeVideoRunloop() : ::djinni::JniInterface<::QMedia::Api::VideoRunloop, NativeVideoRunloop>() {}

NativeVideoRunloop::~NativeVideoRunloop() = default;

NativeVideoRunloop::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeVideoRunloop::JavaProxy::~JavaProxy() = default;

void NativeVideoRunloop::JavaProxy::setVideoRender(const std::shared_ptr<::QMedia::Api::VideoRender> & c_render) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeVideoRunloop>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_setVideoRender,
                           ::djinni::get(::djinni_generated::NativeVideoRender::fromCpp(jniEnv, c_render)));
    ::djinni::jniExceptionCheck(jniEnv);
}
bool NativeVideoRunloop::JavaProxy::start() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeVideoRunloop>::get();
    auto jret = jniEnv->CallBooleanMethod(Handle::get().get(), data.method_start);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Bool::toCpp(jniEnv, jret);
}
void NativeVideoRunloop::JavaProxy::stop() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeVideoRunloop>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_stop);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeVideoRunloop::JavaProxy::pause(bool c_isPause) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeVideoRunloop>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_pause,
                           ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c_isPause)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeVideoRunloop::JavaProxy::forceUpdate() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeVideoRunloop>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_forceUpdate);
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
