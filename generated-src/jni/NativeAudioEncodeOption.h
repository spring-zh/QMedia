// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_config.djinni

#pragma once

#include "audio_encode_option.h"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeAudioEncodeOption final {
public:
    using CppType = ::QMedia::Api::AudioEncodeOption;
    using JniType = jobject;

    using Boxed = NativeAudioEncodeOption;

    ~NativeAudioEncodeOption();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeAudioEncodeOption();
    friend ::djinni::JniClass<NativeAudioEncodeOption>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/qmedia/editor/generated/AudioEncodeOption") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(IIIII)V") };
    const jfieldID field_mCodectype { ::djinni::jniGetFieldID(clazz.get(), "mCodectype", "I") };
    const jfieldID field_mNchannel { ::djinni::jniGetFieldID(clazz.get(), "mNchannel", "I") };
    const jfieldID field_mSamplerate { ::djinni::jniGetFieldID(clazz.get(), "mSamplerate", "I") };
    const jfieldID field_mBitrate { ::djinni::jniGetFieldID(clazz.get(), "mBitrate", "I") };
    const jfieldID field_mSampleformat { ::djinni::jniGetFieldID(clazz.get(), "mSampleformat", "I") };
};

}  // namespace djinni_generated
