// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_node.djinni

#include "NativeVideoRenderNode.h"  // my header
#include "Marshal.hpp"
#include "NativeAnimator.h"
#include "NativePoint.h"
#include "NativeSize.h"
#include "NativeVec4f.h"

namespace djinni_generated {

NativeVideoRenderNode::NativeVideoRenderNode() : ::djinni::JniInterface<::QMedia::Api::VideoRenderNode, NativeVideoRenderNode>("com/qmedia/editor/generated/VideoRenderNode$CppProxy") {}

NativeVideoRenderNode::~NativeVideoRenderNode() = default;


CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::QMedia::Api::VideoRenderNode>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setVisible(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jboolean j_visible)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setVisible(::djinni::Bool::toCpp(jniEnv, j_visible));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setAlpha(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jfloat j_alpha)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setAlpha(::djinni::F32::toCpp(jniEnv, j_alpha));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setCrop(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_crop)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setCrop(::djinni_generated::NativeVec4f::toCpp(jniEnv, j_crop));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setContentSize(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_contentSize)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setContentSize(::djinni_generated::NativeSize::toCpp(jniEnv, j_contentSize));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setAnchorPoint(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_anchorPoint)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setAnchorPoint(::djinni_generated::NativePoint::toCpp(jniEnv, j_anchorPoint));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setPosition(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_position)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setPosition(::djinni_generated::NativePoint::toCpp(jniEnv, j_position));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setPositionZ(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_positionz)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setPositionZ(::djinni::I32::toCpp(jniEnv, j_positionz));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setRotation(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jint j_rotation)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setRotation(::djinni::I32::toCpp(jniEnv, j_rotation));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setRotation3d(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_rotation3d)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setRotation3d(::djinni_generated::NativeVec4f::toCpp(jniEnv, j_rotation3d));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setScaleX(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jfloat j_scalex)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setScaleX(::djinni::F32::toCpp(jniEnv, j_scalex));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setScaleY(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jfloat j_scaley)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setScaleY(::djinni::F32::toCpp(jniEnv, j_scaley));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1setScaleZ(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jfloat j_scalez)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        ref->setScaleZ(::djinni::F32::toCpp(jniEnv, j_scalez));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1getAnimators(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        auto r = ref->getAnimators();
        return ::djinni::release(::djinni::List<::djinni_generated::NativeAnimator>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1addAnimator(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_animator)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        auto r = ref->addAnimator(::djinni_generated::NativeAnimator::toCpp(jniEnv, j_animator));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_qmedia_editor_generated_VideoRenderNode_00024CppProxy_native_1removeAnimator(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_animator)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::QMedia::Api::VideoRenderNode>(nativeRef);
        auto r = ref->removeAnimator(::djinni_generated::NativeAnimator::toCpp(jniEnv, j_animator));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
