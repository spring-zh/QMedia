// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_comm.djinni

#include "NativeMediaStreamInfo.h"  // my header
#include "Marshal.hpp"
#include "NativeAudioDescription.h"
#include "NativeVideoDescription.h"

namespace djinni_generated {

NativeMediaStreamInfo::NativeMediaStreamInfo() = default;

NativeMediaStreamInfo::~NativeMediaStreamInfo() = default;

auto NativeMediaStreamInfo::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeMediaStreamInfo>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.media_type)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.codec_type)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.duration)),
                                                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c.bitrate)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.stream_id)),
                                                           ::djinni::get(::djinni::List<::djinni::I64>::fromCpp(jniEnv, c.gops)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.timebase_num)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.timebase_den)),
                                                           ::djinni::get(::djinni_generated::NativeAudioDescription::fromCpp(jniEnv, c.a_desc)),
                                                           ::djinni::get(::djinni_generated::NativeVideoDescription::fromCpp(jniEnv, c.v_desc)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeMediaStreamInfo::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 11);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeMediaStreamInfo>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mMediaType)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mCodecType)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mDuration)),
            ::djinni::I64::toCpp(jniEnv, jniEnv->GetLongField(j, data.field_mBitrate)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mStreamId)),
            ::djinni::List<::djinni::I64>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mGops)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mTimebaseNum)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mTimebaseDen)),
            ::djinni_generated::NativeAudioDescription::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mADesc)),
            ::djinni_generated::NativeVideoDescription::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mVDesc))};
}

}  // namespace djinni_generated
