// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_comm.djinni

package com.qmedia.editor.generated;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class Color4f {


    /*package*/ final float mR;

    /*package*/ final float mG;

    /*package*/ final float mB;

    /*package*/ final float mA;

    public Color4f(
            float r,
            float g,
            float b,
            float a) {
        this.mR = r;
        this.mG = g;
        this.mB = b;
        this.mA = a;
    }

    // consturct from json
    public Color4f(JSONObject json) throws JSONException {
        this.mR = json.getDouble("r");
        this.mG = json.getDouble("g");
        this.mB = json.getDouble("b");
        this.mA = json.getDouble("a");
    }

    public float getR() {
        return mR;
    }

    public float getG() {
        return mG;
    }

    public float getB() {
        return mB;
    }

    public float getA() {
        return mA;
    }

    @Override
    public boolean equals(@Nullable Object obj) {
        if (!(obj instanceof Color4f)) {
            return false;
        }
        Color4f other = (Color4f) obj;
        return this.mR == other.mR &&
                this.mG == other.mG &&
                this.mB == other.mB &&
                this.mA == other.mA;
    }

    @Override
    public int hashCode() {
        // Pick an arbitrary non-zero starting value
        int hashCode = 17;
        hashCode = hashCode * 31 + Float.floatToIntBits(mR);
        hashCode = hashCode * 31 + Float.floatToIntBits(mG);
        hashCode = hashCode * 31 + Float.floatToIntBits(mB);
        hashCode = hashCode * 31 + Float.floatToIntBits(mA);
        return hashCode;
    }

    public JSONObject toJson() throws JSONException {
        JSONObject root = new JSONObject();
        root.put("r", this.mR);
        root.put("g", this.mG);
        root.put("b", this.mB);
        root.put("a", this.mA);
        return root;
    }

    @Override
    public String toString() {
        return "Color4f{" +
                "mR=" + mR +
                "," + "mG=" + mG +
                "," + "mB=" + mB +
                "," + "mA=" + mA +
        "}";
    }

}
