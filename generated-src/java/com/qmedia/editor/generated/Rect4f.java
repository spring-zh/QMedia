// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_comm.djinni

package com.qmedia.editor.generated;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class Rect4f {


    /*package*/ final float mLeft;

    /*package*/ final float mTop;

    /*package*/ final float mRight;

    /*package*/ final float mBottom;

    public Rect4f(
            float left,
            float top,
            float right,
            float bottom) {
        this.mLeft = left;
        this.mTop = top;
        this.mRight = right;
        this.mBottom = bottom;
    }

    // consturct from json
    public Rect4f(JSONObject json) throws JSONException {
        this.mLeft = json.getDouble("left");
        this.mTop = json.getDouble("top");
        this.mRight = json.getDouble("right");
        this.mBottom = json.getDouble("bottom");
    }

    public float getLeft() {
        return mLeft;
    }

    public float getTop() {
        return mTop;
    }

    public float getRight() {
        return mRight;
    }

    public float getBottom() {
        return mBottom;
    }

    @Override
    public boolean equals(@Nullable Object obj) {
        if (!(obj instanceof Rect4f)) {
            return false;
        }
        Rect4f other = (Rect4f) obj;
        return this.mLeft == other.mLeft &&
                this.mTop == other.mTop &&
                this.mRight == other.mRight &&
                this.mBottom == other.mBottom;
    }

    @Override
    public int hashCode() {
        // Pick an arbitrary non-zero starting value
        int hashCode = 17;
        hashCode = hashCode * 31 + Float.floatToIntBits(mLeft);
        hashCode = hashCode * 31 + Float.floatToIntBits(mTop);
        hashCode = hashCode * 31 + Float.floatToIntBits(mRight);
        hashCode = hashCode * 31 + Float.floatToIntBits(mBottom);
        return hashCode;
    }

    public JSONObject toJson() throws JSONException {
        JSONObject root = new JSONObject();
        root.put("left", this.mLeft);
        root.put("top", this.mTop);
        root.put("right", this.mRight);
        root.put("bottom", this.mBottom);
        return root;
    }

    @Override
    public String toString() {
        return "Rect4f{" +
                "mLeft=" + mLeft +
                "," + "mTop=" + mTop +
                "," + "mRight=" + mRight +
                "," + "mBottom=" + mBottom +
        "}";
    }

}
