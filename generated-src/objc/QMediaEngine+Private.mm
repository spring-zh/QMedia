// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_engine.djinni

#import "QMediaEngine+Private.h"
#import "QMediaEngine.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "QAudioDescription+Private.h"
#import "QEditorExporterInternal+Private.h"
#import "QEditorPlayerInternal+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface QMediaEngine ()

- (id)initWithCpp:(const std::shared_ptr<::QMedia::Api::MediaEngine>&)cppRef;

@end

@implementation QMediaEngine {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::QMedia::Api::MediaEngine>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::QMedia::Api::MediaEngine>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nonnull NSString *)version {
    try {
        auto objcpp_result_ = ::QMedia::Api::MediaEngine::version();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (void)configAudioOut:(nonnull QAudioDescription *)desc {
    try {
        ::QMedia::Api::MediaEngine::config_audio_out(::djinni_generated::AudioDescription::toCpp(desc));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable QEditorPlayerInternal *)createEditorPlayerInternal {
    try {
        auto objcpp_result_ = ::QMedia::Api::MediaEngine::create_editor_player_internal();
        return ::djinni_generated::EditorPlayerInternal::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable QEditorExporterInternal *)createEditorExporterInternal {
    try {
        auto objcpp_result_ = ::QMedia::Api::MediaEngine::create_editor_exporter_internal();
        return ::djinni_generated::EditorExporterInternal::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto MediaEngine::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto MediaEngine::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<QMediaEngine>(cpp);
}

}  // namespace djinni_generated

@end
