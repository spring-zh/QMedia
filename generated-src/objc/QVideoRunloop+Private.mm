// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from video_runloop.djinni

#import "QVideoRunloop+Private.h"
#import "QVideoRunloop.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "QVideoRender+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class VideoRunloop::ObjcProxy final
: public ::QMedia::Api::VideoRunloop
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::VideoRunloop;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void setVideoRender(const std::shared_ptr<::QMedia::Api::VideoRender> & c_render) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() setVideoRender:(::djinni_generated::VideoRender::fromCpp(c_render))];
        }
    }
    bool start() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() start];
            return ::djinni::Bool::toCpp(objcpp_result_);
        }
    }
    void stop() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() stop];
        }
    }
    void pause(bool c_isPause) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() pause:(::djinni::Bool::fromCpp(c_isPause))];
        }
    }
    void forceUpdate() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() forceUpdate];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto VideoRunloop::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto VideoRunloop::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
