// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_session.djinni

#import "QMediaSessionInternal+Private.h"
#import "QMediaSessionInternal.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "QMediaSegment+Private.h"
#import "QSize+Private.h"
#import "QTimeRange+Private.h"
#import "QVec4+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface QMediaSessionInternal ()

- (id)initWithCpp:(const std::shared_ptr<::QMedia::Api::MediaSessionInternal>&)cppRef;

@end

@implementation QMediaSessionInternal {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::QMedia::Api::MediaSessionInternal>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::QMedia::Api::MediaSessionInternal>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nullable QMediaSegment *)cresteMediaSegment:(nonnull NSString *)filename
                                          mode:(int32_t)mode {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->cresteMediaSegment(::djinni::String::toCpp(filename),
                                                                      ::djinni::I32::toCpp(mode));
        return ::djinni_generated::MediaSegment::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)addMediaSegment:(nullable QMediaSegment *)segment {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->addMediaSegment(::djinni_generated::MediaSegment::toCpp(segment));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)removeMediaSegment:(nullable QMediaSegment *)segment {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->removeMediaSegment(::djinni_generated::MediaSegment::toCpp(segment));
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull QTimeRange *)getTotalTimeRange {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getTotalTimeRange();
        return ::djinni_generated::TimeRange::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setDisplayLayerSize:(nonnull QSize *)size {
    try {
        _cppRefHandle.get()->setDisplayLayerSize(::djinni_generated::Size::toCpp(size));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull QSize *)getDisplayLayerSize {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getDisplayLayerSize();
        return ::djinni_generated::Size::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setBkColor:(nonnull QVec4 *)color {
    try {
        _cppRefHandle.get()->setBkColor(::djinni_generated::Vec4::toCpp(color));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull QVec4 *)getBkColor {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getBkColor();
        return ::djinni_generated::Vec4::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)start {
    try {
        _cppRefHandle.get()->start();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)stop {
    try {
        _cppRefHandle.get()->stop();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)pause {
    try {
        _cppRefHandle.get()->pause();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)resume {
    try {
        _cppRefHandle.get()->resume();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)seek:(int64_t)timeMs
        flag:(int32_t)flag {
    try {
        _cppRefHandle.get()->seek(::djinni::I64::toCpp(timeMs),
                                  ::djinni::I32::toCpp(flag));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (int64_t)getPosition {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getPosition();
        return ::djinni::I64::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto MediaSessionInternal::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto MediaSessionInternal::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<QMediaSessionInternal>(cpp);
}

}  // namespace djinni_generated

@end
