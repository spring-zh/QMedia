// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_session.djinni

#import "QEditorPlayerCallback+Private.h"
#import "QEditorPlayerCallback.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface QEditorPlayerCallback ()

- (id)initWithCpp:(const std::shared_ptr<::QMedia::Api::EditorPlayerCallback>&)cppRef;

@end

@implementation QEditorPlayerCallback {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::QMedia::Api::EditorPlayerCallback>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::QMedia::Api::EditorPlayerCallback>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)onStarted:(int32_t)code {
    try {
        _cppRefHandle.get()->onStarted(::djinni::I32::toCpp(code));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)onStoped:(int32_t)code {
    try {
        _cppRefHandle.get()->onStoped(::djinni::I32::toCpp(code));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)onSeekTo:(int64_t)timeMs {
    try {
        _cppRefHandle.get()->onSeekTo(::djinni::I64::toCpp(timeMs));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)onProgressUpdated:(int64_t)timeMs {
    try {
        _cppRefHandle.get()->onProgressUpdated(::djinni::I64::toCpp(timeMs));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)onPlayerStateChanged:(int32_t)newState
                    oldState:(int32_t)oldState {
    try {
        _cppRefHandle.get()->onPlayerStateChanged(::djinni::I32::toCpp(newState),
                                                  ::djinni::I32::toCpp(oldState));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)onCompleted {
    try {
        _cppRefHandle.get()->onCompleted();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto EditorPlayerCallback::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto EditorPlayerCallback::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<QEditorPlayerCallback>(cpp);
}

}  // namespace djinni_generated

@end
