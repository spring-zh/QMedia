// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from media_session.djinni

#import "QEditorPlayerInternal+Private.h"
#import "QEditorPlayerInternal.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "QEditorPlayerCallback+Private.h"
#import "QMediaSessionInternal+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface QEditorPlayerInternal ()

- (id)initWithCpp:(const std::shared_ptr<::QMedia::Api::EditorPlayerInternal>&)cppRef;

@end

@implementation QEditorPlayerInternal {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::QMedia::Api::EditorPlayerInternal>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::QMedia::Api::EditorPlayerInternal>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nullable QMediaSessionInternal *)getSession {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getSession();
        return ::djinni_generated::MediaSessionInternal::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setCallback:(nullable id<QEditorPlayerCallback>)callback {
    try {
        _cppRefHandle.get()->setCallback(::djinni_generated::EditorPlayerCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (int64_t)getPosition {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getPosition();
        return ::djinni::I64::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)play {
    try {
        _cppRefHandle.get()->play();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)pause {
    try {
        _cppRefHandle.get()->pause();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)seek:(int64_t)timeMs
        flag:(int32_t)flag {
    try {
        _cppRefHandle.get()->seek(::djinni::I64::toCpp(timeMs),
                                  ::djinni::I32::toCpp(flag));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isUserPaused {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->isUserPaused();
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (int32_t)getState {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getState();
        return ::djinni::I32::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}


namespace djinni_generated {

auto EditorPlayerInternal::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto EditorPlayerInternal::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<QEditorPlayerInternal>(cpp);
}

}  // namespace djinni_generated

@end
