apply plugin: 'com.android.library'

def SdkVersionName = "1.5"

android {

    compileSdkVersion 26
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 22
        //renderscriptTargetApi 18
        //renderscriptSupportModeEnabled true
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_PLATFORM=android-18", "-DANDROID_ARM_NEON=TRUE" , "-DANDROID_TOOLCHAIN=clang",
                        "-DANDROID_STL=c++_static"
                cppFlags.add("-Werror=return-type");
                cppFlags.add("-Werror=format");
                cFlags "-std=gnu11"
                cppFlags "-std=c++11 -frtti -fexceptions"
                abiFilters "armeabi-v7a","arm64-v8a","x86"
            }
        }

//        task copyTask(type: Copy) {
//
//        }
//
//        tasks.withType(JavaCompile) {
//            compileTask -> compileTask.dependsOn copyTask
//        }

        //setProperty("archivesBaseName", '"$SdkVersionName"')

        buildConfigField('String', 'SERVER_TYPE', '"release"')

        buildConfigField('String', 'SDK_VERSION', '"' + SdkVersionName + '"')
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            buildConfigField('String', 'SERVER_TYPE', '"release"')
            //            buildConfigField('String', 'SDK_VERSION', '"' + SdkVersionName + '"')
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            buildConfigField('String', 'SERVER_TYPE', '"release"')
            jniDebuggable true
        }
    }
    externalNativeBuild {
        cmake {
            version "3.10.2"
            path 'jni/CMakeLists.txt'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //sourceSets { main { renderscript.srcDirs = ['src/main/rs', 'src/main/rs/'] } }
}

uploadArchives {
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:support-annotations:28.0.0'
}

task copyAAR(type: Copy) {
    from 'build/outputs/aar'
    into '../../SDKBuild/aar'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(copyAAR)
}

//copyAAR.dependsOn "assemble"