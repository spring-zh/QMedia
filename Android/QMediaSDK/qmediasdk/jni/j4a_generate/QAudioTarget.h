/*
 * Copyright (C) 2015 Zhang Rui <bbcallen@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * https://github.com/Bilibili/jni4android
 * This file is automatically generated by jni4android, do not modify.
 */

#ifndef J4A__com_qmedia_qmediasdk_QTarget_QAudioTarget__H
#define J4A__com_qmedia_qmediasdk_QTarget_QAudioTarget__H

#include "j4a/j4a_base.h"

jboolean J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__startAudio(JNIEnv *env, jobject thiz);
jboolean J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__startAudio__catchAll(JNIEnv *env, jobject thiz);
jboolean J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__stopAudio(JNIEnv *env, jobject thiz);
jboolean J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__stopAudio__catchAll(JNIEnv *env, jobject thiz);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__pauseAudio(JNIEnv *env, jobject thiz);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__pauseAudio__catchAll(JNIEnv *env, jobject thiz);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__resumeAudio(JNIEnv *env, jobject thiz);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__resumeAudio__catchAll(JNIEnv *env, jobject thiz);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__flushAudio(JNIEnv *env, jobject thiz);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__flushAudio__catchAll(JNIEnv *env, jobject thiz);
jboolean J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__initAudio(JNIEnv *env, jobject thiz, jobject describe);
jboolean J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__initAudio__catchAll(JNIEnv *env, jobject thiz, jobject describe);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__unInitAudio(JNIEnv *env, jobject thiz);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__unInitAudio__catchAll(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getSampleRate(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getSampleRate__catchAll(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getChannels(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getChannels__catchAll(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getFormat(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getFormat__catchAll(JNIEnv *env, jobject thiz);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__setVolume(JNIEnv *env, jobject thiz, jfloat volume);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__setVolume__catchAll(JNIEnv *env, jobject thiz, jfloat volume);
jfloat J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getVolume(JNIEnv *env, jobject thiz);
jfloat J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getVolume__catchAll(JNIEnv *env, jobject thiz);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__setAudioDelay(JNIEnv *env, jobject thiz, jint audioDelay);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__setAudioDelay__catchAll(JNIEnv *env, jobject thiz, jint audioDelay);
jint J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getAudioDelay(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getAudioDelay__catchAll(JNIEnv *env, jobject thiz);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__setRender(JNIEnv *env, jobject thiz, jobject audioRender);
void J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__setRender__catchAll(JNIEnv *env, jobject thiz, jobject audioRender);
jobject J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getRender(JNIEnv *env, jobject thiz);
jobject J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getRender__catchAll(JNIEnv *env, jobject thiz);
jobject J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget__getRender__asGlobalRef__catchAll(JNIEnv *env, jobject thiz);
int J4A_loadClass__J4AC_com_qmedia_qmediasdk_QTarget_QAudioTarget(JNIEnv *env);

#endif//J4A__com_qmedia_qmediasdk_QTarget_QAudioTarget__H
