/*
 * Copyright (C) 2015 Zhang Rui <bbcallen@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * https://github.com/Bilibili/jni4android
 * This file is automatically generated by jni4android, do not modify.
 */

#ifndef J4A__com_qmedia_qmediasdk_QGraphic_QVideoFrame__H
#define J4A__com_qmedia_qmediasdk_QGraphic_QVideoFrame__H

#include "j4a/j4a_base.h"

jobject J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__QVideoFrame(JNIEnv *env, jint textureid, jint width, jint height, jint format, jlong timestamp);
jobject J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__QVideoFrame__catchAll(JNIEnv *env, jint textureid, jint width, jint height, jint format, jlong timestamp);
jobject J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__QVideoFrame__asGlobalRef__catchAll(JNIEnv *env, jint textureid, jint width, jint height, jint format, jlong timestamp);
jobject J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__QVideoFrame_2(JNIEnv *env, jobject buffer, jint width, jint height, jint format, jlong timestamp);
jobject J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__QVideoFrame_2__catchAll(JNIEnv *env, jobject buffer, jint width, jint height, jint format, jlong timestamp);
jobject J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__QVideoFrame_2__asGlobalRef__catchAll(JNIEnv *env, jobject buffer, jint width, jint height, jint format, jlong timestamp);
jint J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__width(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__width__catchAll(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__height(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__height__catchAll(JNIEnv *env, jobject thiz);
jboolean J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__is_texture(JNIEnv *env, jobject thiz);
jboolean J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__is_texture__catchAll(JNIEnv *env, jobject thiz);
jobject J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__buffer(JNIEnv *env, jobject thiz);
jobject J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__buffer__catchAll(JNIEnv *env, jobject thiz);
jobject J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__buffer__asGlobalRef__catchAll(JNIEnv *env, jobject thiz);
jlong J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__timestamp(JNIEnv *env, jobject thiz);
jlong J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__timestamp__catchAll(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__textureid(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__textureid__catchAll(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__getFormat(JNIEnv *env, jobject thiz);
jint J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame__getFormat__catchAll(JNIEnv *env, jobject thiz);
int J4A_loadClass__J4AC_com_qmedia_qmediasdk_QGraphic_QVideoFrame(JNIEnv *env);

#endif//J4A__com_qmedia_qmediasdk_QGraphic_QVideoFrame__H
